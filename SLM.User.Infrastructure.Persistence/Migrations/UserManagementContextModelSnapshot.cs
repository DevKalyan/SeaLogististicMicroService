// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SLM.User.Infrastructure.Persistence.Context;

#nullable disable

namespace SLM.User.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(UserManagementContext))]
    partial class UserManagementContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SLM.User.Domain.Entities.Models.DesignationEntity", b =>
                {
                    b.Property<Guid>("EntityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("EntityID");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int")
                        .HasColumnName("IsDeleted");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedAt");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.HasKey("EntityID");

                    b.ToTable("Designations");

                    b.HasData(
                        new
                        {
                            EntityID = new Guid("3699a0ac-dfe6-4b87-be15-755071a73e47"),
                            CreatedAt = new DateTime(2024, 5, 1, 22, 25, 6, 651, DateTimeKind.Utc).AddTicks(7487),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "This is a super admin designation and will be only one user",
                            IsDeleted = 0,
                            Title = "Super-Admin",
                            UpdatedAt = new DateTime(2024, 5, 1, 22, 25, 6, 651, DateTimeKind.Utc).AddTicks(7488),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("SLM.User.Domain.Entities.Models.MenuEntity", b =>
                {
                    b.Property<Guid>("EntityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("EntityID");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int")
                        .HasColumnName("IsDeleted");

                    b.Property<string>("MenuCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuHeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MenuOrder")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedAt");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.HasKey("EntityID");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("SLM.User.Domain.Entities.Models.MenuItemsEntity", b =>
                {
                    b.Property<Guid>("EntityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("EntityID");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int")
                        .HasColumnName("IsDeleted");

                    b.Property<string>("MenuDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("MenuEntityID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MenuItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MenuOrder")
                        .HasColumnType("int");

                    b.Property<string>("MenuUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentMenuCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedAt");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.HasKey("EntityID");

                    b.HasIndex("MenuEntityID");

                    b.ToTable("MenuItems");
                });

            modelBuilder.Entity("SLM.User.Domain.Entities.Models.UserCredentialEntity", b =>
                {
                    b.Property<Guid>("EntityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("EntityID");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime>("DtPasswordChanged")
                        .HasColumnType("datetime2");

                    b.Property<string>("HashedPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int")
                        .HasColumnName("IsDeleted");

                    b.Property<int>("PasswordChanged")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedAt");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntityID");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UserCredentials");

                    b.HasData(
                        new
                        {
                            EntityID = new Guid("98930285-562e-4b85-831f-2e13ed35e538"),
                            CreatedAt = new DateTime(2024, 5, 1, 22, 25, 6, 662, DateTimeKind.Utc).AddTicks(9452),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DtPasswordChanged = new DateTime(2024, 5, 1, 22, 25, 6, 662, DateTimeKind.Utc).AddTicks(9446),
                            HashedPassword = "FV3g7xkaAjwhwitfpeyaBXKxSuvUXo/GKfS7bv/V9Wei/jQuKLAC92vhhcanfrQK",
                            IsDeleted = 0,
                            PasswordChanged = 1,
                            UpdatedAt = new DateTime(2024, 5, 1, 22, 25, 6, 662, DateTimeKind.Utc).AddTicks(9455),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserId = new Guid("29cabc94-036d-4527-b6b5-61112f987d29"),
                            Username = "Adminstrator"
                        });
                });

            modelBuilder.Entity("SLM.User.Domain.Entities.Models.UserEntity", b =>
                {
                    b.Property<Guid>("EntityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("EntityID");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DesignationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int")
                        .HasColumnName("IsDeleted");

                    b.Property<string>("Lastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedAt");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<Guid>("UserTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EntityID");

                    b.HasIndex("DesignationId");

                    b.HasIndex("UserTypeId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            EntityID = new Guid("29cabc94-036d-4527-b6b5-61112f987d29"),
                            Country = "India",
                            CreatedAt = new DateTime(2024, 5, 1, 22, 25, 6, 651, DateTimeKind.Utc).AddTicks(7511),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DateOfBirth = new DateTime(2024, 5, 1, 22, 25, 6, 651, DateTimeKind.Utc).AddTicks(7508),
                            DesignationId = new Guid("3699a0ac-dfe6-4b87-be15-755071a73e47"),
                            Email = "Devkranth@gmail.com",
                            Firstname = "Super",
                            IsDeleted = 0,
                            Lastname = "Administrator",
                            MiddleName = "SA",
                            PhoneNumber = "9999999999",
                            PostalCode = "999999",
                            State = "Karnataka",
                            UpdatedAt = new DateTime(2024, 5, 1, 22, 25, 6, 651, DateTimeKind.Utc).AddTicks(7511),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserTypeId = new Guid("df554227-c4e6-4265-a762-96b30cc01654")
                        });
                });

            modelBuilder.Entity("SLM.User.Domain.Entities.Models.UserMenusEntity", b =>
                {
                    b.Property<Guid>("EntityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("EntityID");

                    b.Property<string>("AllocatedMenus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int")
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedAt");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EntityID");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UserMenus");
                });

            modelBuilder.Entity("SLM.User.Domain.Entities.Models.UserTypeEntity", b =>
                {
                    b.Property<Guid>("EntityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("EntityID");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int")
                        .HasColumnName("IsDeleted");

                    b.Property<string>("TypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedAt");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.HasKey("EntityID");

                    b.ToTable("UserTypes");

                    b.HasData(
                        new
                        {
                            EntityID = new Guid("df554227-c4e6-4265-a762-96b30cc01654"),
                            CreatedAt = new DateTime(2024, 5, 1, 22, 25, 6, 651, DateTimeKind.Utc).AddTicks(7304),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "This user will be having access to all and will also create the users",
                            IsDeleted = 0,
                            TypeName = "Adminstrator",
                            UpdatedAt = new DateTime(2024, 5, 1, 22, 25, 6, 651, DateTimeKind.Utc).AddTicks(7309),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("SLM.User.Domain.Entities.Models.MenuItemsEntity", b =>
                {
                    b.HasOne("SLM.User.Domain.Entities.Models.MenuEntity", "Menu")
                        .WithMany("MenuItems")
                        .HasForeignKey("MenuEntityID");

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("SLM.User.Domain.Entities.Models.UserCredentialEntity", b =>
                {
                    b.HasOne("SLM.User.Domain.Entities.Models.UserEntity", "User")
                        .WithOne("UserCredential")
                        .HasForeignKey("SLM.User.Domain.Entities.Models.UserCredentialEntity", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SLM.User.Domain.Entities.Models.UserEntity", b =>
                {
                    b.HasOne("SLM.User.Domain.Entities.Models.DesignationEntity", "Designation")
                        .WithMany("Users")
                        .HasForeignKey("DesignationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SLM.User.Domain.Entities.Models.UserTypeEntity", "UserType")
                        .WithMany("Users")
                        .HasForeignKey("UserTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Designation");

                    b.Navigation("UserType");
                });

            modelBuilder.Entity("SLM.User.Domain.Entities.Models.UserMenusEntity", b =>
                {
                    b.HasOne("SLM.User.Domain.Entities.Models.UserEntity", "User")
                        .WithOne("UserMenu")
                        .HasForeignKey("SLM.User.Domain.Entities.Models.UserMenusEntity", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SLM.User.Domain.Entities.Models.DesignationEntity", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("SLM.User.Domain.Entities.Models.MenuEntity", b =>
                {
                    b.Navigation("MenuItems");
                });

            modelBuilder.Entity("SLM.User.Domain.Entities.Models.UserEntity", b =>
                {
                    b.Navigation("UserCredential");

                    b.Navigation("UserMenu");
                });

            modelBuilder.Entity("SLM.User.Domain.Entities.Models.UserTypeEntity", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
