// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SLM.User.Infrastructure.Persistence.Context;

#nullable disable

namespace SLM.User.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(UserManagementContext))]
    [Migration("20240523230905_InitialMigration-Employee")]
    partial class InitialMigrationEmployee
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SLM.User.Domain.Entities.Models.DesignationEntity", b =>
                {
                    b.Property<Guid>("EntityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("desingationId");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DesignationCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("designationCode");

                    b.Property<string>("DesignationDesc")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("designationDescription");

                    b.Property<string>("DesignationName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("designationName");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EntityID");

                    b.ToTable("SLM_Master_TblDesignation", (string)null);
                });

            modelBuilder.Entity("SLM.User.Domain.Entities.Models.EmailTemplatesEntity", b =>
                {
                    b.Property<Guid>("EntityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("emailTemplateId");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmailTemplate")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("emailTemplate");

                    b.Property<string>("EmailTemplateCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("emailTemplateCode");

                    b.Property<string>("EmailTemplateDesc")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("emailTemplateDesc");

                    b.Property<string>("EmailTemplateName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("emailTemplateName");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EntityID");

                    b.ToTable("SLM_Master_TblEmailTemplate", (string)null);
                });

            modelBuilder.Entity("SLM.User.Domain.Entities.Models.MenuEntity", b =>
                {
                    b.Property<Guid>("EntityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("menuId");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<string>("MenuCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("menuCode");

                    b.Property<string>("MenuHeader")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("menuTitle");

                    b.Property<int>("MenuOrder")
                        .HasColumnType("int")
                        .HasColumnName("menuOrder");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EntityID");

                    b.ToTable("SLM_Master_TblMenu", (string)null);
                });

            modelBuilder.Entity("SLM.User.Domain.Entities.Models.MenuItemsEntity", b =>
                {
                    b.Property<Guid>("EntityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("menuItemId");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<string>("MenuDescription")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("menuDescription");

                    b.Property<Guid?>("MenuEntityID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MenuItemCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("menuItemCd");

                    b.Property<string>("MenuName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("menuTitle");

                    b.Property<int>("MenuOrder")
                        .HasColumnType("int")
                        .HasColumnName("menuItemOrder");

                    b.Property<string>("MenuUrl")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("menuUrl");

                    b.Property<string>("ParentMenuCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("parentMenuCd");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EntityID");

                    b.HasIndex("MenuEntityID");

                    b.ToTable("SLM_Master_TblMenuItems_Details", (string)null);
                });

            modelBuilder.Entity("SLM.User.Domain.Entities.Models.UserCredentialEntity", b =>
                {
                    b.Property<Guid>("EntityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("userCredentialId");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DtPasswordChanged")
                        .HasColumnType("datetime2")
                        .HasColumnName("passwordChangedDt");

                    b.Property<string>("HashedPassword")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("passsword");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<int>("PasswordChanged")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserEntityID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("userId");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("userName");

                    b.HasKey("EntityID");

                    b.HasIndex("UserEntityID");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("SLM_Master_TblUserCredentialDetail", (string)null);
                });

            modelBuilder.Entity("SLM.User.Domain.Entities.Models.UserEntity", b =>
                {
                    b.Property<Guid>("EntityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserId");

                    b.Property<string>("Country")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("")
                        .HasColumnName("country");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2")
                        .HasColumnName("dateOfBirth");

                    b.Property<Guid>("DesignationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("")
                        .HasColumnName("email");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("")
                        .HasColumnName("firstName");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("")
                        .HasColumnName("lastName");

                    b.Property<string>("MiddleName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("")
                        .HasColumnName("middleName");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasDefaultValue("")
                        .HasColumnName("phoneNumber");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasDefaultValue("")
                        .HasColumnName("postalCode");

                    b.Property<string>("State")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("")
                        .HasColumnName("state");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EntityID");

                    b.HasIndex("DesignationId");

                    b.HasIndex("UserTypeId");

                    b.ToTable("SLM_Master_TblUsersBasicDetail", (string)null);
                });

            modelBuilder.Entity("SLM.User.Domain.Entities.Models.UserMenusEntity", b =>
                {
                    b.Property<Guid>("EntityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("userMenuId");

                    b.Property<string>("AllocatedMenus")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("allocatedMenuCode");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserEntityID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("userId");

                    b.HasKey("EntityID");

                    b.HasIndex("UserEntityID");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("SLM_Master_TblUserMenuDetail", (string)null);
                });

            modelBuilder.Entity("SLM.User.Domain.Entities.Models.UserTypeEntity", b =>
                {
                    b.Property<Guid>("EntityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("userTypeId");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("userName");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("typeName");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EntityID");

                    b.ToTable("SLM_Master_TblUserType", (string)null);
                });

            modelBuilder.Entity("SLM.User.Domain.Entities.Models.MenuItemsEntity", b =>
                {
                    b.HasOne("SLM.User.Domain.Entities.Models.MenuEntity", "Menu")
                        .WithMany("MenuItems")
                        .HasForeignKey("MenuEntityID");

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("SLM.User.Domain.Entities.Models.UserCredentialEntity", b =>
                {
                    b.HasOne("SLM.User.Domain.Entities.Models.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserEntityID");

                    b.HasOne("SLM.User.Domain.Entities.Models.UserEntity", null)
                        .WithOne("UserCredential")
                        .HasForeignKey("SLM.User.Domain.Entities.Models.UserCredentialEntity", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SLM.User.Domain.Entities.Models.UserEntity", b =>
                {
                    b.HasOne("SLM.User.Domain.Entities.Models.DesignationEntity", "Designation")
                        .WithMany("Users")
                        .HasForeignKey("DesignationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SLM.User.Domain.Entities.Models.UserTypeEntity", "UserType")
                        .WithMany("Users")
                        .HasForeignKey("UserTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Designation");

                    b.Navigation("UserType");
                });

            modelBuilder.Entity("SLM.User.Domain.Entities.Models.UserMenusEntity", b =>
                {
                    b.HasOne("SLM.User.Domain.Entities.Models.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserEntityID");

                    b.HasOne("SLM.User.Domain.Entities.Models.UserEntity", null)
                        .WithOne("UserMenu")
                        .HasForeignKey("SLM.User.Domain.Entities.Models.UserMenusEntity", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SLM.User.Domain.Entities.Models.DesignationEntity", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("SLM.User.Domain.Entities.Models.MenuEntity", b =>
                {
                    b.Navigation("MenuItems");
                });

            modelBuilder.Entity("SLM.User.Domain.Entities.Models.UserEntity", b =>
                {
                    b.Navigation("UserCredential");

                    b.Navigation("UserMenu");
                });

            modelBuilder.Entity("SLM.User.Domain.Entities.Models.UserTypeEntity", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
